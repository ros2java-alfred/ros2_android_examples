sudo: required

language: generic

services:
  - docker

env:
  global:
    - HOME_BUILD=$HOME/build
    - HOME_ENV=$HOME/.env
    - ANDROID_SDK_VER=sdk-tools-linux-3859397
    - ANDROID_NDK_VER=android-ndk-r15b
    - ANDROID_HOME=$HOME_BUILD/$ANDROID_SDK_VER
    - ANDROID_NDK=$HOME_BUILD/$ANDROID_NDK_VER
    - ANDROID_VER=android-25
    - ANDROID_GCC=arm-linux-androideabi-clang
    - ANDROID_ABI=armeabi-v7a
    - ANDROID_SDK_HOME=$HOME_BUILD
    - ROS2WS=$HOME_BUILD/ros2_java_ws
    - ROS2JAVA_PATH=$ANDROID_NDK/build/cmake/android.toolchain.cmake
    - PYTHON_PATH=/usr/bin/python3
    - ROOT_PATH="$HOME_BUILD/ament_ws/install_isolated;$ROS2WS/install_isolated"
    - COMMIT=${TRAVIS_COMMIT::8}
    - PATH="$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin"
    - ANDROID_PACKAGES="add-ons;addon-google_apis-google-24:add-ons;addon-google_gdk-google-19:build-tools;26.0.0:cmake;3.6.3155560:extras;android;gapid;3:extras;android;m2repository:extras;google;auto:extras;google;google_play_services:extras;google;instantapps:extras;google;m2repository:extras;google;market_apk_expansion:extras;google;market_licensing:extras;google;play_billing:extras;google;simulators:extras;google;webdriver:extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2:extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2:lldb;2.3:patcher;v4:platforms;android-26:tools:platform-tools"

cache:
  directories:
    - $ANDROID_HOME
    - $ANDROID_NDK

before_install:
- echo "INSTALL ANDROID SDK & NDK..."
- cd $HOME_BUILD && env | grep -E '^TRAVIS_' > $HOME_ENV && env | grep -E '^ANDROID_' >> $HOME_ENV && env | grep -E '^CI_' >> $HOME_ENV && echo -e "CI_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER\nCI_PULL_REQUEST=$TRAVIS_PULL_REQUEST\nCI_BRANCH=$TRAVIS_BRANCH\nCI_BUILD_URL=$" >> $HOME_ENV
- if [ ! -d "$ANDROID_NDK/platforms" ]; then cd $HOME_BUILD && wget https://dl.google.com/android/repository/$ANDROID_NDK_VER-linux-x86_64.zip && unzip -q -o $ANDROID_NDK_VER-linux-x86_64.zip -d ./ &>/dev/null; fi && ls -lFa ./
- if [ ! -d "$ANDROID_HOME/tools" ]; then cd $HOME_BUILD && wget https://dl.google.com/android/repository/$ANDROID_SDK_VER.zip && unzip -q -o $ANDROID_SDK_VER.zip -d $ANDROID_SDK_VER &>/dev/null; fi && ls -lFa ./
- if [ ! -d "$ANDROID_HOME/licenses" ]; then mkdir -p $ANDROID_HOME/licenses && echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license" && echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license" && echo -e "\n152e8995e4332c0dc80bc63bf01fe3bbccb0804a\nd975f751698a77b662f1254ddbeed3901e976f5a" > "$ANDROID_HOME/licenses/intel-android-extra-license" ; fi
- if [ ! -f "$HOME_BUILD/.android/repositories.cfg" ]; then mkdir -p ${HOME_BUILD}/.android && echo "### User Sources for Android SDK Manager" >> $HOME_BUILD/.android/repositories.cfg && echo "count=0" >> $HOME_BUILD/.android/repositories.cfg ; fi
- echo yyy | sdkmanager --update
- ARRAY=$(echo $ANDROID_PACKAGES | tr ":" "\n") && for package in $ARRAY ; do echo "install $package" && echo y | sdkmanager "$package" ; done
- docker pull theosakamg7/ros2java:latest
- echo "INSTALL/BUILD ROS2 AMENT..."
- cd $HOME_BUILD && mkdir -p ament_ws/src && cd $HOME_BUILD/ament_ws
- docker run -u "$UID" -it --rm -v `pwd`:`pwd` --env-file $HOME_ENV -w `pwd` theosakamg7/ros2java:latest sh -c "/usr/bin/wget https://gist.githubusercontent.com/Theosakamg/e6084cfafa6b7ea690104424cef970a2/raw/ament_java.repos"
- docker run -u "$UID" -it --rm -v `pwd`:`pwd` --env-file $HOME_ENV -w `pwd` theosakamg7/ros2java:latest sh -c "/usr/bin/vcs import src < ament_java.repos"
- docker run -u "$UID" -it --rm -v `pwd`:`pwd` --env-file $HOME_ENV -w `pwd` theosakamg7/ros2java:latest sh -c "src/ament/ament_tools/scripts/ament.py build --symlink-install --isolated"
- echo "INSTALL ROS2 WS..."
- cd $HOME_BUILD && mkdir -p $ROS2WS/src && cd $ROS2WS
- docker run -u "$UID" -it --rm -v `pwd`:`pwd` --env-file $HOME_ENV -w `pwd` theosakamg7/ros2java:latest sh -c "/usr/bin/wget https://gist.githubusercontent.com/Theosakamg/617cd893813163cdcb9943a08d667964/raw/ros2_java_android.repos"
- docker run -u "$UID" -it --rm -v `pwd`:`pwd` --env-file $HOME_ENV -w `pwd` theosakamg7/ros2java:latest sh -c "/usr/bin/vcs import src < ros2_java_android.repos"
- cd $ROS2WS/src/ros2/rosidl_typesupport && patch -p1 < ../../ros2_java/ros2_java/rosidl_ros2_android.diff
- mkdir -p $HOME_BUILD/.android
- rm -rf $ROS2WS/src/ros2_java/ros2_android_examples && ln -s $HOME_BUILD/ros2java-alfred/ros2_android_examples $ROS2WS/src/ros2_java/ros2_android_examples
- touch $ROS2WS/src/ros2/rosidl/python_cmake_module/AMENT_IGNORE && touch $ROS2WS/src/ros2/rosidl/rosidl_generator_py/AMENT_IGNORE
- cd $ROS2WS/src/eProsima/Fast-RTPS && git submodule init && git submodule update
- echo "BUILD ROS2 WS..."
- cd $HOME_BUILD && ls -lFa ./ && find . -maxdepth 3 -type d -not \( -path "./.git" -prune \)
- cd $HOME_BUILD && docker run -u "0" -it --rm -v `pwd`:`pwd` --env-file $HOME_ENV -w `pwd` theosakamg7/ros2java:latest sh -c ". ./ament_ws/install_isolated/local_setup.sh && cd $ROS2WS && ament build --isolated --cmake-args -DPYTHON_EXECUTABLE=$PYTHON_PATH -DEPROSIMA_BUILD=ON -DCMAKE_FIND_ROOT_PATH=$ROOT_PATH -DANDROID_FUNCTION_LEVEL_LINKING=OFF -DANDROID_TOOLCHAIN_NAME=$ANDROID_GCC -DANDROID_STL=gnustl_shared -DANDROID_ABI=$ANDROID_ABI -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=$ANDROID_VER -DCMAKE_TOOLCHAIN_FILE=$ROS2JAVA_PATH -DANDROID_HOME=$ANDROID_HOME -- --ament-cmake-args -DPYTHON_EXECUTABLE=$PYTHON_PATH -DEPROSIMA_BUILD=ON -DCMAKE_FIND_ROOT_PATH=$ROOT_PATH -DANDROID_FUNCTION_LEVEL_LINKING=OFF -DANDROID_TOOLCHAIN_NAME=$ANDROID_GCC -DANDROID_STL=gnustl_shared -DANDROID_ABI=$ANDROID_ABI -DANDROID_NDK=$ANDROID_NDK -DANDROID_NATIVE_API_LEVEL=$ANDROID_VER -DCMAKE_TOOLCHAIN_FILE=$ROS2JAVA_PATH -DANDROID_HOME=$ANDROID_HOME -- --ament-gradle-args -Pament.android_stl=gnustl_shared -Pament.android_abi=$ANDROID_ABI -Pament.android_ndk=$ANDROID_NDK --"

script:
- cd $HOME_BUILD && docker run -u "$UID" -it --rm -v `pwd`:`pwd` --env-file $HOME_ENV -w `pwd` theosakamg7/ros2java:latest sh -c ". ament_ws/install_isolated/local_setup.sh && cd $ROS2WS #&& ament test --isolated --only rcljava"

after_success:
  - coveralls

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/4aac82b42245203edceb
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
